!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("bip39"),require("bip32"),require("crypto-browserify"),require("bitcoinjs-lib"),require("blockstack"),require("jsontokens")):"function"==typeof define&&define.amd?define(["exports","bip39","bip32","crypto-browserify","bitcoinjs-lib","blockstack","jsontokens"],t):t((e=e||self)["@blockstack/keychain"]={},e.bip39,e.bip32,e.cryptoBrowserify,e.bitcoinjsLib,e.blockstack,e.jsontokens)}(this,(function(e,t,r,n,i,o,s){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var c=function(){function e(e,t){this.hdNode=e,this.appDomain=t}var t=e.prototype;return t.getAppPrivateKey=function(){if(!this.hdNode.privateKey)throw new Error("Node does not have private key");return this.hdNode.privateKey.toString("hex")},t.getAddress=function(){return f(this.hdNode)},e}(),d=function(){function e(e,t){this.hdNode=e,this.salt=t}var t=e.prototype;return t.getNode=function(){return this.hdNode},t.getAppNode=function(e){var t=function(e){var t=0;if(0===e.length)return t;for(var r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r),t&=t;return 2147483647&t}(n.createHash("sha256").update(""+e+this.salt).digest("hex")),r=this.hdNode.deriveHardened(t);return new c(r,e)},t.toBase58=function(){return this.hdNode.toBase58()},t.getSalt=function(){return this.salt},e}(),u=function(){function e(e,t){this.hdNode=e,this.salt=t}var t=e.prototype;return t.getNode=function(){return this.hdNode},t.getSalt=function(){return this.salt},t.getIdentityKey=function(){if(!this.hdNode.privateKey)throw new Error("Node does not have private key");return this.hdNode.privateKey.toString("hex")},t.getIdentityKeyID=function(){return this.hdNode.publicKey.toString("hex")},t.getAppsNode=function(){return new d(this.hdNode.deriveHardened(0),this.salt)},t.getAddress=function(){return f(this.hdNode)},t.getEncryptionNode=function(){return this.hdNode.deriveHardened(2)},t.getSigningNode=function(){return this.hdNode.deriveHardened(1)},e}();function h(e,t){if(void 0===t&&(t=0),e.isNeutered())throw new Error("You need the private key to generate identity addresses");var r=e.publicKey.toString("hex"),i=n.createHash("sha256").update(r).digest("hex");return new u(e.deriveHardened(t),i)}function f(e){return i.address.toBase58Check(i.crypto.hash160(e.publicKey),i.networks.bitcoin.pubKeyHash)}var p=function(e,t){try{var r=e.toString();return Promise.resolve(y(r,t))}catch(e){return Promise.reject(e)}},y=function(e,t){try{return Promise.resolve(v(e,t)).then((function(e){return e.toString("hex")}))}catch(e){return Promise.reject(e)}},v=function(e,r){try{if(!t.validateMnemonic(e))throw new Error("Not a valid bip39 nmemonic");return Promise.resolve(l(e)).then((function(e){var t=Buffer.from(e,"hex"),i=n.randomBytes(16),o=n.pbkdf2Sync(r,i,1e5,48,"sha512"),s=o.slice(0,16),a=o.slice(16,32),c=o.slice(32,48),d=n.createCipheriv("aes-128-cbc",s,c),u=d.update(t).toString("hex");u+=d.final("hex");var h=Buffer.concat([i,Buffer.from(u,"hex")]),f=n.createHmac("sha256",a);f.update(h);var p=f.digest();return Buffer.concat([i,p,Buffer.from(u,"hex")])}))}catch(e){return Promise.reject(e)}},l=function(e){try{return Promise.resolve(t.mnemonicToEntropy(e))}catch(e){return Promise.reject(e)}},m=function(){function e(e){var t=e.address;this.keyPair=e.keyPair,this.address=t}var t=e.prototype;return t.makeAuthResponse=function(e){var t=e.appDomain,r=e.gaiaUrl,i=e.transitPublicKey,a=e.profile;try{var c=this,d=c.appPrivateKey(t);return Promise.resolve(function(e){try{return Promise.resolve(function(e){try{return Promise.resolve(fetch(e+"/hub_info")).then((function(e){return Promise.resolve(e.json())}))}catch(e){return Promise.reject(e)}}(e)).then((function(e){return e.read_url_prefix}))}catch(e){return Promise.reject(e)}}(r)).then((function(e){return Promise.resolve(c.profileUrl(e)).then((function(e){var t,u,h,f,p,y=(t=o.getPublicKeyFromPrivate(d.slice(0,64)),u=c.keyPair.key.slice(0,64),h=o.getPublicKeyFromPrivate(u),f=n.randomBytes(16).toString("hex"),p={childToAssociate:t,iss:h,exp:31536e3+(new Date).getTime()/1e3,iat:Date.now()/1e3,salt:f},new s.TokenSigner("ES256K",u).sign(p));return o.makeAuthResponse(c.keyPair.key,a||{},"",{profileUrl:e},void 0,d,void 0,i,r,void 0,y)}))}))}catch(e){return Promise.reject(e)}},t.appPrivateKey=function(e){var t=this.keyPair,n=t.salt;return new d(r.fromBase58(t.appsNodeKey),n).getAppNode(e).getAppPrivateKey()},t.profileUrl=function(e){try{return Promise.resolve(""+e+this.address+"/profile.json")}catch(e){return Promise.reject(e)}},e}();e.default={Wallet:function(){function e(e){var t=e.identityPublicKeychain,r=e.bitcoinPublicKeychain,n=e.firstBitcoinAddress,i=e.identityKeypairs,o=e.identityAddresses;this.encryptedBackupPhrase=e.encryptedBackupPhrase,this.identityPublicKeychain=t,this.bitcoinPublicKeychain=r,this.firstBitcoinAddress=n,this.identityKeypairs=i,this.identityAddresses=o;var s=[];i.forEach((function(e,t){var r=new m({keyPair:e,address:o[t]});s.push(r)})),this.identities=s}return e.generate=function(e){try{var i=this,o=t.generateMnemonic(128,n.randomBytes);return Promise.resolve(t.mnemonicToSeed(o)).then((function(t){var n=r.fromSeed(t);return Promise.resolve(p(Buffer.from(o),e)).then((function(e){var t=e.toString();return i.createAccount(t,n)}))}))}catch(e){return Promise.reject(e)}},e.restore=function(e,n){try{var i=this;if(!t.validateMnemonic(n))throw new Error("Invalid mnemonic used to restore wallet");return Promise.resolve(t.mnemonicToSeed(n)).then((function(t){var o=r.fromSeed(t);return Promise.resolve(p(Buffer.from(n),e)).then((function(e){var t=e.toString();return i.createAccount(t,o)}))}))}catch(e){return Promise.reject(e)}},e.createAccount=function(e,t,r){return void 0===r&&(r=1),new this(a({},function(e,t){for(var r=function(e){return e.deriveHardened(888).deriveHardened(0)}(e),n=function(e){return e.deriveHardened(44).deriveHardened(0).deriveHardened(0)}(e),i=r.neutered().toBase58(),o=n.neutered(),s=o.toBase58(),a=f(function(e,t,r){void 0===t&&(t=0),void 0===r&&(r="EXTERNAL_ADDRESS");var n=null;if("EXTERNAL_ADDRESS"===r)n=0;else{if("CHANGE_ADDRESS"!==r)throw new Error("Invalid chain type");n=1}return e.derive(n).derive(t)}(o)),c=[],d=[],u=0;u<t;u++){var p=(l=void 0,v=(y=h(r,u)).getAddress(),{key:y.getIdentityKey(),keyID:y.getIdentityKeyID(),address:v,appsNodeKey:(l=y.getAppsNode()).toBase58(),salt:l.getSalt()});d.push(p),c.push(p.address)}var y,v,l;return{identityPublicKeychain:i,bitcoinPublicKeychain:s,firstBitcoinAddress:a,identityAddresses:c,identityKeypairs:d}}(t,r),{encryptedBackupPhrase:e}))},e}()}}));
//# sourceMappingURL=keychain.umd.production.min.js.map
